@model Project_Recruiment_Huce.Models.Candidate
@{
  ViewBag.Title = "Manage Profile";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
  <link rel="stylesheet" href="~/Content/css/quill.snow.css" />
  <style>
    #about-editor .ql-editor { min-height: 360px; height: 360px; }
  </style>
}

@section Scripts {
  <script src="~/Scripts/js/quill.min.js"></script>
  <script>
    (function () {
      var about = new Quill('#about-editor', { theme: 'snow' });
      // initialize with server value
      var aboutHidden = document.getElementById('About');
      if (aboutHidden && aboutHidden.value) {
        about.root.innerHTML = aboutHidden.value;
      }
      // sync on submit
      var form = document.getElementById('candidate-form');
      if (form) {
        form.addEventListener('submit', function () {
          document.getElementById('About').value = about.root.innerHTML;
        });
      }

      // avatar preview + filename
      var avatarInput = document.getElementById('avatarInput');
      var avatarImg = document.getElementById('avatarPreview');
      var fileNameEl = document.getElementById('avatarFileName');
      if (avatarInput && avatarImg) {
        avatarInput.addEventListener('change', function (e) {
          var file = e.target.files && e.target.files[0];
          if (!file) return;
          if (fileNameEl) fileNameEl.textContent = file.name;
          var reader = new FileReader();
          reader.onload = function (ev) {
            avatarImg.src = ev.target.result;
          };
          reader.readAsDataURL(file);
        });
      }
    })();
  </script>
}

<section class="section-hero overlay inner-page bg-image" style="background-image: url('@Url.Content("~/Content/images/hero_1.jpg")');" id="home-section">
  <div class="container">
    <div class="row">
      <div class="col-md-7">
        <h1 class="text-white font-weight-bold">Manage Profile</h1>
        <div class="custom-breadcrumbs">
          <a href="@Url.Action("Index","Home")">Home</a> <span class="mx-2 slash">/</span>
          <span class="text-white"><strong>Manage</strong></span>
        </div>
      </div>
    </div>
  </div>
  </section>

<section class="site-section">
  <div class="container">
    @if (TempData["SuccessMessage"] != null) {
      <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    <div class="row mb-5">
      <div class="col-lg-12">
        @using (Html.BeginForm("CandidatesManage", "Candidates", FormMethod.Post, new { @class = "p-4 p-md-5 border rounded", id = "candidate-form", enctype = "multipart/form-data" }))
        {
          @Html.AntiForgeryToken()
          @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
          <h3 class="text-black mb-5 border-bottom pb-2">Personal Details</h3>

          <div class="form-row align-items-center mb-4">
            <div class="col-md-2 text-center mb-3 mb-md-0">
              @{ 
                string avatarUrl = null; 
                try {
                  var idClaim = (User != null && User.Identity != null) ? ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier) : null;
                  if (idClaim != null) {
                    var accId = int.Parse(idClaim.Value);
                    using (var vdb = new Project_Recruiment_Huce.DbContext.RecruitmentDbContext()) {
                      var acc = vdb.Accounts.FirstOrDefault(a => a.AccountId == accId);
                      if (acc != null && acc.PhotoId.HasValue) {
                        var photo = vdb.Photos.FirstOrDefault(p => p.PhotoId == acc.PhotoId.Value);
                        if (photo != null) { avatarUrl = Url.Content(photo.FilePath); }
                      }
                    }
                  }
                } catch { }
              }
              <img id="avatarPreview" src="@(avatarUrl ?? Url.Content("~/Content/images/person_1.jpg"))" alt="avatar" style="width:80px;height:80px;border-radius:50%;object-fit:cover;" />
            </div>
            <div class="col-md-10">
              <label class="d-block">Upload Avatar</label>
              <label class="btn btn-success btn-md btn-file mb-0">
                Browse File<input id="avatarInput" type="file" name="avatar" accept="image/*" hidden>
              </label>
              <small id="avatarFileName" class="text-muted ml-2"></small>
              <small class="text-muted ml-2">JPG/PNG up to 2MB.</small>
            </div>
          </div>

          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="FullName">Full Name</label>
              @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "e.g. John Doe" })
            </div>
            <div class="form-group col-md-3">
              <label for="BirthDate">Birth Date</label>
              @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control", type = "date" })
            </div>
            <div class="form-group col-md-3">
              <label for="Gender">Gender</label>
              @Html.DropDownListFor(m => m.Gender, new SelectList(new[] { new { Text = "Nam", Value = "Nam" }, new { Text = "Nu", Value = "Ná»¯" } }, "Value", "Text", Model?.Gender), new { @class = "form-control" })
            </div>
          </div>

          <div class="form-row">
            <div class="form-group col-md-4">
              <label for="Phone">Phone</label>
              @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = "090..." })
            </div>
            <div class="form-group col-md-4">
              <label for="Email">Email</label>
              @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", placeholder = "you@domain.com" })
            </div>
            <div class="form-group col-md-4">
              <label for="Address">Address</label>
              @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "City, Country" })
            </div>
          </div>

          <h3 class="text-black my-5 border-bottom pb-2">About</h3>

          <div class="form-group">
            <div id="about-editor" class="editor"></div>
            @Html.HiddenFor(m => m.About, new { id = "About" })
          </div>

          <div class="text-right">
            <button type="submit" class="btn btn-primary btn-md">Save Profile</button>
          </div>
        }
      </div>
    </div>
  </div>
</section>


